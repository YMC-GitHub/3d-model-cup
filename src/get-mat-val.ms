arr=#(
"diffuse",
"diffuse_roughness",
"selfIllumination",
"selfIllumination_gi",
"selfIllumination_multiplier",
"reflection",
"reflection_glossiness",
"hilight_glossiness",
"reflection_subdivs",
"reflection_fresnel",
"reflection_maxDepth",
"reflection_exitColor",
"reflection_useInterpolation",
"reflection_ior",
"reflection_lockGlossiness",
"reflection_lockIOR",
"reflection_dimDistance",
"reflection_dimDistance_on",
"reflection_dimDistance_falloff",
"reflection_affectAlpha",
"refraction",
"refraction_glossiness",
"refraction_subdivs",
"refraction_ior",
"refraction_fogColor",
"refraction_fogMult",
"refraction_fogBias",
"refraction_affectShadows",
"refraction_affectAlpha",
"refraction_maxDepth",
"refraction_exitColor",
"refraction_useExitColor",
"refraction_useInterpolation",
"refraction_dispersion",
"refraction_dispersion_on",
"translucency_on",
"translucency_thickness",
"translucency_scatterCoeff",
"translucency_fbCoeff",
"translucency_multiplier",
"translucency_color",
"brdf_type",
"anisotropy",
"anisotropy_rotation",
"anisotropy_derivation",
"anisotropy_axis",
"anisotropy_channel",
"soften",
"brdf_fixDarkEdges",
"gtr_gamma",
"gtr_oldGamma",
"brdf_useRoughness",
"option_traceDiffuse",
"option_traceReflection",
"option_traceRefraction",
"option_doubleSided",
"option_reflectOnBack",
"option_useIrradMap",
"refraction_fogUnitsScale_on",
"option_traceDiffuseAndGlossy",
"option_cutOff",
"preservationMode",
"option_environment_priority",
"effect_id",
"override_effect_id",
"option_clampTextures",
"option_opacityMode",
"option_glossyFresnel",
"texmap_diffuse",
"texmap_diffuse_on",
"texmap_diffuse_multiplier",
"texmap_reflection",
"texmap_reflection_on",
"texmap_reflection_multiplier",
"texmap_refraction",
"texmap_refraction_on",
"texmap_refraction_multiplier",
"texmap_bump",
"texmap_bump_on",
"texmap_bump_multiplier",
"texmap_reflectionGlossiness",
"texmap_reflectionGlossiness_on",
"texmap_reflectionGlossiness_multiplier",
"texmap_refractionGlossiness",
"texmap_refractionGlossiness_on",
"texmap_refractionGlossiness_multiplier",
"texmap_refractionIOR",
"texmap_refractionIOR_on",
"texmap_refractionIOR_multiplier",
"texmap_displacement",
"texmap_displacement_on",
"texmap_displacement_multiplier",
"texmap_translucent",
"texmap_translucent_on",
"texmap_translucent_multiplier",
"texmap_environment",
"texmap_environment_on",
"texmap_hilightGlossiness",
"texmap_hilightGlossiness_on",
"texmap_hilightGlossiness_multiplier",
"texmap_reflectionIOR",
"texmap_reflectionIOR_on",
"texmap_reflectionIOR_multiplier",
"texmap_opacity",
"texmap_opacity_on",
"texmap_opacity_multiplier",
"texmap_roughness",
"texmap_roughness_on",
"texmap_roughness_multiplier",
"texmap_anisotropy",
"texmap_anisotropy_on",
"texmap_anisotropy_multiplier",
"texmap_anisotropy_rotation",
"texmap_anisotropy_rotation_on",
"texmap_anisotropy_rotation_multiplier",
"texmap_refraction_fog",
"texmap_refraction_fog_on",
"texmap_refraction_fog_multiplier",
"texmap_self_illumination",
"texmap_self_illumination_on",
"texmap_self_illumination_multiplier",
"reflect_minRate",
"reflect_maxRate",
"reflect_interpSamples",
"reflect_colorThreshold",
"reflect_normalThreshold",
"refract_minRate",
"refract_maxRate",
"refract_interpSamples",
"refract_colorThreshold",
"refract_normalThreshold"
)

S_NUM=1
E_NUM=arr.count
for m=S_NUM to E_NUM do (
  index = m as string
  --print index
  meditMaterials[2][index]
)


S_NUM=1
E_NUM=arr.count
for m=S_NUM to E_NUM do (
 --print index
 --print ("meditMaterials[2]."+arr[m]+"=")
  --meditMaterials[2][arr[m]]
  -- meditMaterials[2]["diffuse"]
  -- meditMaterials[2].diffuse
  --v=(execute "meditMaterials[2].diffuse")
  v=(execute ("meditMaterials[2]."+arr[m]))
  str="meditMaterials[2]."+arr[m]+"="+(v as string)
  print (str)
  --print (v as string)
  --execute str
  --print  "$=" +arr[m] as string +""
)
